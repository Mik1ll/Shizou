// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShizouData.Database;

#nullable disable

namespace ShizouData.Migrations
{
    [DbContext(typeof(ShizouContext))]
    [Migration("20230425210743_RemoveSomeColumns")]
    partial class RemoveSomeColumns
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("AniDbEpisodeLocalFile", b =>
                {
                    b.Property<int>("ManualLinkEpisodesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ManualLinkLocalFilesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ManualLinkEpisodesId", "ManualLinkLocalFilesId");

                    b.HasIndex("ManualLinkLocalFilesId");

                    b.ToTable("ManualLinkXrefs", (string)null);
                });

            modelBuilder.Entity("ShizouData.Models.AniDbAnime", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AirDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("AniDbUpdated")
                        .HasColumnType("TEXT");

                    b.Property<int>("AnimeType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("EpisodeCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImagePath")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Restricted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AniDbAnimes");
                });

            modelBuilder.Entity("ShizouData.Models.AniDbEpisode", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("AirDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("AniDbAnimeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DurationMinutes")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EpisodeType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TitleEnglish")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TitleKanji")
                        .HasColumnType("TEXT");

                    b.Property<string>("TitleRomaji")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Watched")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("WatchedUpdated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AniDbAnimeId");

                    b.ToTable("AniDbEpisodes");
                });

            modelBuilder.Entity("ShizouData.Models.AniDbEpisodeFileXref", b =>
                {
                    b.Property<int>("AniDbEpisodeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AniDbFileId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AniDbEpisodeId", "AniDbFileId");

                    b.ToTable("AniDbEpisodeFileXrefs");
                });

            modelBuilder.Entity("ShizouData.Models.AniDbFile", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AniDbGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("Censored")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Chaptered")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Crc")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Deprecated")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DurationSeconds")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ed2K")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("FileSize")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FileVersion")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Md5")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MyListEntryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Sha1")
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Watched")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("WatchedUpdated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AniDbGroupId");

                    b.HasIndex("Ed2K")
                        .IsUnique();

                    b.HasIndex("MyListEntryId");

                    b.ToTable("AniDbFiles");
                });

            modelBuilder.Entity("ShizouData.Models.AniDbGenericFile", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AniDbEpisodeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MyListEntryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AniDbEpisodeId")
                        .IsUnique();

                    b.HasIndex("MyListEntryId");

                    b.ToTable("AniDbGenericFiles");
                });

            modelBuilder.Entity("ShizouData.Models.AniDbGroup", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AniDbGroups");
                });

            modelBuilder.Entity("ShizouData.Models.AniDbMyListEntry", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MyListFileState")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MyListState")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Watched")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("WatchedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AniDbMyListEntries");
                });

            modelBuilder.Entity("ShizouData.Models.CommandRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CommandArgs")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CommandId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QueueType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CommandId")
                        .IsUnique();

                    b.ToTable("CommandRequests");
                });

            modelBuilder.Entity("ShizouData.Models.ImportFolder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("ScanOnImport")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Path")
                        .IsUnique();

                    b.ToTable("ImportFolders");
                });

            modelBuilder.Entity("ShizouData.Models.LocalFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Crc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Ed2K")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("FileSize")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ignored")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ImportFolderId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PathTail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Signature")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Ed2K")
                        .IsUnique();

                    b.HasIndex("Signature")
                        .IsUnique();

                    b.HasIndex("ImportFolderId", "PathTail")
                        .IsUnique();

                    b.ToTable("LocalFiles");
                });

            modelBuilder.Entity("AniDbEpisodeLocalFile", b =>
                {
                    b.HasOne("ShizouData.Models.AniDbEpisode", null)
                        .WithMany()
                        .HasForeignKey("ManualLinkEpisodesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShizouData.Models.LocalFile", null)
                        .WithMany()
                        .HasForeignKey("ManualLinkLocalFilesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShizouData.Models.AniDbEpisode", b =>
                {
                    b.HasOne("ShizouData.Models.AniDbAnime", "AniDbAnime")
                        .WithMany("AniDbEpisodes")
                        .HasForeignKey("AniDbAnimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AniDbAnime");
                });

            modelBuilder.Entity("ShizouData.Models.AniDbFile", b =>
                {
                    b.HasOne("ShizouData.Models.AniDbGroup", "AniDbGroup")
                        .WithMany("AniDbFiles")
                        .HasForeignKey("AniDbGroupId");

                    b.HasOne("ShizouData.Models.AniDbMyListEntry", "MyListEntry")
                        .WithMany()
                        .HasForeignKey("MyListEntryId");

                    b.OwnsMany("ShizouData.Models.AniDbAudio", "Audio", b1 =>
                        {
                            b1.Property<int>("AniDbFileId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Id")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Bitrate")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Codec")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Language")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("AniDbFileId", "Id");

                            b1.ToTable("AniDbAudio");

                            b1.WithOwner("AniDbFile")
                                .HasForeignKey("AniDbFileId");

                            b1.Navigation("AniDbFile");
                        });

                    b.OwnsMany("ShizouData.Models.AniDbSubtitle", "Subtitles", b1 =>
                        {
                            b1.Property<int>("AniDbFileId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Id")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Language")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("AniDbFileId", "Id");

                            b1.ToTable("AniDbSubtitles");

                            b1.WithOwner("AniDbFile")
                                .HasForeignKey("AniDbFileId");

                            b1.Navigation("AniDbFile");
                        });

                    b.OwnsOne("ShizouData.Models.AniDbVideo", "Video", b1 =>
                        {
                            b1.Property<int>("AniDbFileId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("BitRate")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Codec")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<int>("ColorDepth")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Height")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Width")
                                .HasColumnType("INTEGER");

                            b1.HasKey("AniDbFileId");

                            b1.ToTable("AniDbFiles");

                            b1.WithOwner()
                                .HasForeignKey("AniDbFileId");
                        });

                    b.Navigation("AniDbGroup");

                    b.Navigation("Audio");

                    b.Navigation("MyListEntry");

                    b.Navigation("Subtitles");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("ShizouData.Models.AniDbGenericFile", b =>
                {
                    b.HasOne("ShizouData.Models.AniDbMyListEntry", "MyListEntry")
                        .WithMany()
                        .HasForeignKey("MyListEntryId");

                    b.Navigation("MyListEntry");
                });

            modelBuilder.Entity("ShizouData.Models.LocalFile", b =>
                {
                    b.HasOne("ShizouData.Models.ImportFolder", "ImportFolder")
                        .WithMany("LocalFiles")
                        .HasForeignKey("ImportFolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImportFolder");
                });

            modelBuilder.Entity("ShizouData.Models.AniDbAnime", b =>
                {
                    b.Navigation("AniDbEpisodes");
                });

            modelBuilder.Entity("ShizouData.Models.AniDbGroup", b =>
                {
                    b.Navigation("AniDbFiles");
                });

            modelBuilder.Entity("ShizouData.Models.ImportFolder", b =>
                {
                    b.Navigation("LocalFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
