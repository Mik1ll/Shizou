@page "/"
@using Microsoft.AspNetCore.Components.Web
@using Shizou.Blazor.Features
@using Shizou.Data
@namespace Shizou.Blazor.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <base href="~/"/>
    <link rel="stylesheet" href="lib/bootstrap/css/bootstrap.min.css"/>
    <link rel="stylesheet" href="lib/open-iconic/font/css/open-iconic-bootstrap.min.css"/>
    <link rel="stylesheet" href="lib/bootstrap-icons/font/bootstrap-icons.min.css"/>
    <link rel="stylesheet" href="lib/video.js/video-js.min.css"/>
    <link rel="stylesheet" href="css/site.css"/>
    @* ReSharper disable Html.PathError *@
    <link rel="stylesheet" href="Shizou.Blazor.styles.css"/>
    @* ReSharper restore Html.PathError *@
    <link rel="icon" type="image/png" href="favicon.png"/>
    <script src="js/theme.js"></script>
    <component type="typeof(HeadOutlet)" render-mode="Server"/>
</head>
<body>
@{
    var identityCookie = HttpContext.Request.GetTypedHeaders().Cookie.FirstOrDefault(c => c.Name == Constants.IdentityCookieName)?.Value.ToString();
    var serverIp = HttpContext.Connection.RemoteIpAddress!.ToString();
}
<component type="typeof(App)" render-mode="Server" param-IdentityCookie="@identityCookie" param-ServerIp="@serverIp"/>

<div id="blazor-error-ui">
    <environment include="Staging,Production">
        An error has occurred. This application may no longer respond until reloaded.
    </environment>
    <environment include="Development">
        An unhandled exception has occurred. See browser dev tools for details.
    </environment>
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

<script src="lib/bootstrap/js/bootstrap.bundle.min.js"></script>
<script src="lib/libass-wasm/js/subtitles-octopus.min.js"></script>
<script src="lib/video.js/alt/video.novtt.min.js"></script>

@* ReSharper disable Html.PathError *@
<script src="_framework/blazor.server.js"></script>
@* ReSharper restore Html.PathError *@

<script type="text/javascript">
function loadTooltip(element) {
    const tooltip = new bootstrap.Tooltip(element);
    element.addEventListener("click", function() {
        tooltip.hide();
    });
}
</script>
<script type="text/javascript">
function loadToast(element) {
    const toast = new bootstrap.Toast(element);
    toast.show();
}
</script>
<script type="text/javascript">
function loadPlayer(elementId, subtitleUrls, fontUrls) {
    videojs(document.getElementById(elementId), {fluid:true}, function onPlayerReady() {
        if (subtitleUrls.length <= 0) {
            return;
        }
        var video = this.tech_.el_;
        var options = {
            video: video, // HTML5 video element
            subUrl: subtitleUrls[0], // Link to subtitles
            fonts: fontUrls,
            workerUrl: '/lib/libass-wasm/js/subtitles-octopus-worker.min.js', // Link to WebAssembly-based file "libassjs-worker.js"
            legacyWorkerUrl: '/lib/libass-wasm/js/subtitles-octopus-worker-legacy.min.js', // Link to non-WebAssembly worker
            fallbackFont: '/fonts/default.woff2'
        };
        
        subtitleHandler.dispose()
        subtitleHandler.instance = new SubtitlesOctopus(options);
        this.textTracks().addEventListener('change', (event) => {
            var tracks = this.textTracks().tracks_;
            var showingIdx = tracks.findIndex((track) => track.mode === 'showing');
            for (let i = 0; i < tracks.length; i++) {
                if (i != showingIdx) {
                    tracks[i].mode = 'disabled';
                }
            }
            if (showingIdx >= 0) {
                subtitleHandler.setTrack(subtitleUrls[showingIdx]);
            } else {
                subtitleHandler.free();
            }
        });
    });
}
var subtitleHandler = {
    instance: null,
    dispose: function() {
        if (subtitleHandler.instance) {
            subtitleHandler.instance.dispose();
            subtitleHandler.instance = null;
        }
    },
    free: function() {
        if (subtitleHandler.instance) {
            subtitleHandler.instance.freeTrack();
            subtitleHandler.instance.setSubUrl('');
        }
    },
    setTrack: function(subUrl) {
        if (subtitleHandler.instance && subUrl !== subtitleHandler.instance.subUrl) {
            subtitleHandler.free();
            subtitleHandler.instance.setTrackByUrl(subUrl);
            subtitleHandler.instance.setSubUrl(subUrl);
        }
    }
};
</script>
</body>
</html>
