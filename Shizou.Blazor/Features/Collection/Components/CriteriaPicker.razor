@using Shizou.Data.Extensions
@using Shizou.Data.FilterCriteria
@{
    var or = Filter.Criteria;
}
<div class="p-2 border border-info">
    <div class="position-relative">
        <span class="text-info bg-body ps-1 pe-1 position-absolute" style="top:-1.1rem;line-height:1rem">OR</span>
    </div>
    @foreach (var and in or.Criteria.Append(null))
    {
        <div @key="@and" class="mt-2 p-2 border border-success">
            <div class="position-relative">
                <span class="text-success bg-body ps-1 pe-1 position-absolute" style="top:-1.1rem;line-height:1rem">AND</span>
            </div>
            @foreach (var (term, idx) in (and?.Criteria ?? new List<TermCriterion>()).Append(null).Select((term, idx) => (term, idx)))
            {
                <div class="border border-secondary p-2 mb-2">
                    <select @key="@term" class="form-select mb-1" @onchange="@(args => Update(or, and, idx, (string?)args.Value))">
                        <option value="">@(term is null ? "Pick a Term" : "Remove")</option>
                        @foreach (var termType in _validTermTypes.Keys)
                        {
                            <option value="@termType" selected="@(termType == term?.GetType().Name)">@(termType.TrimEnd("Criterion").UpperCaseSpaced())</option>
                        }
                    </select>
                    @if (and is not null && term is not null)
                    {
                        <EditForm Model="@term">
                            <DataAnnotationsValidator/>
                            <ValidationSummary/>

                            <div class="form-check form-check-inline mb-1">
                                <label class="form-check-label">
                                    <InputCheckbox class="form-check-input" @bind-Value="@(term.Negated)"/> Negate
                                </label>
                            </div>
                            @switch (term)
                            {
                                case AirDateCriterion airdate:
                                    <InputSelect class="form-select w-auto d-inline-block mb-1" @bind-Value="@(airdate.AirDateCriterionType)">
                                        @foreach (var type in Enum.GetValues<AirDateCriterionType>())
                                        {
                                            <option value="@type" selected="@(airdate.AirDateCriterionType == type)">@type</option>
                                        }
                                    </InputSelect>
                                    <br/>
                                    <InputNumber class="form-control d-inline-block" style="width: 5em" placeholder="Year" @bind-Value="@(airdate.Year)"/>
                                    <InputNumber class="form-control d-inline-block" style="width: 5.3em" placeholder="Month" @bind-Value="@(airdate.Month)"/>
                                    <InputNumber class="form-control d-inline-block" style="width: 4.3em" placeholder="Day" @bind-Value="@(airdate.Day)"/>
                                    break;
                            }
                        </EditForm>
                    }
                </div>
            }
        </div>
    }
</div>
