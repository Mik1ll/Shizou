@page "/Collection"
@using Shizou.Data.Enums
@using Shizou.Data.Extensions
@using Shizou.Data.FilterCriteria

<main class="container-fluid mb-3"> @* Must have single top level element for ::deep css isolation *@
    <FilterOffcanvas @ref="@(_filterOffcanvas)" ReloadCollection="@LoadAsync"></FilterOffcanvas>
    <PageTitle>Collection</PageTitle>
    <div class="row justify-content-center mb-2">
        <div class="col-auto m-1">
            <LiveSearchBox @ref="@_searchBox" GetResults="@GetSearchResultsAsync" OnResultsRetrieved="@SetSearchResults" ShowSelect="false"
                           PlaceholderText="Search Anime..."></LiveSearchBox>
        </div>
        <div class="col-auto m-1">
            <div class="input-group">
                <select class="form-select" @onchange="@OnSortSelect" disabled="@(!string.IsNullOrWhiteSpace(_searchBox?.Query))">
                    @foreach (var sort in Enum.GetValues<AnimeSort>())
                    {
                        <option value="@sort" selected="@(SortEnum == sort)">@(sort.ToString().UpperCaseSpaced())</option>
                    }
                </select>
                <button type="button" class="btn btn-outline-secondary" @onclick="@OnSortDirectionChanged">
                    <i class="bi @(Descending ? "bi-arrow-down" : "bi-arrow-up")"></i>
                </button>
            </div>
        </div>
        <div class="col-auto m-1">
            <div class="input-group">
                <select class="form-select" @onchange="@OnSeasonSelect">
                    <option value="">Season</option>
                    @foreach (var season in Enum.GetValues<AnimeSeason>())
                    {
                        <option value="@season" selected="@(SeasonEnum == season)">@(season.ToString())</option>
                    }
                </select>
                <InputNumber class="form-control" @bind-Value="@Year" @bind-Value:after="@OnYearChanged" placeholder="Year"/>
            </div>
        </div>
        <div class="col-auto m-1">
            <select class="form-select" @onchange="@OnAnimeTypeSelect">
                <option value="">Anime Type</option>
                @foreach (var animeType in Enum.GetValues<AnimeType>().Skip(1))
                {
                    <option value="@animeType" selected="@(AnimeTypeEnum == animeType)">@(animeType.ToString().UpperCaseSpaced())</option>
                }
            </select>
        </div>
        <div class="col-auto m-1">
            <div class="input-group">
                <select class="form-select" @onchange="@OnFilterSelect">
                    <option value="">All</option>
                    @foreach (var filter in _filters)
                    {
                        <option value="@(filter.Id)" selected="@(FilterId == filter.Id)">@(filter.Name)</option>
                    }
                </select>
                @if (FilterId != 0)
                {
                    <button type="button" class="btn btn-primary" @onclick="@EditFilterAsync">Edit Filter</button>
                }
                <button type="button" class="btn btn-success" @onclick="@CreateFilterAsync">New Filter</button>
            </div>
        </div>
    </div>
    <div class="d-flex flex-wrap align-content-start justify-content-start column-gap-3">
        @foreach (var anime in _animeSearchResults ?? _anime ?? [])
        {
            <AnimeCard @key="@(anime.Id)" AnimeId="@(anime.Id)" Title="@(anime.TitleTranscription)"></AnimeCard>
        }
    </div>
</main>
