@using Shizou.Data.Extensions
<table class="table table-hover">
    <thead>
    <tr>
        <th>Title</th>
        <th></th>
        <th class="text-end">Files</th>
        <th class="text-end d-none d-md-table-cell">Len</th>
        <th class="text-end d-none d-md-table-cell">Aired</th>
    </tr>
    </thead>
    <tbody class="table-group-divider">
    @foreach (var ep in _episodes)
    {
        <tr role="button" @onclick="@(() => ToggleEpExpand(ep))">
            <td class="absorbing-column">
                <span class="text-body d-block">
                    <strong>@(ep.EpString)</strong> &nbsp; @(ep.TitleTranscription ?? ep.TitleEnglish) &nbsp;
                    <a class="bi bi-box-arrow-up-right" href="https://anidb.net/episode/@(ep.Id)" target="_blank"></a>
                </span>
                @if (_fileCounts[ep.Id] > 0)
                {
                    <img loading="lazy" src="@(GetEpisodeThumbnailPath(ep.Id))" alt="" class="me-2 rounded float-start" style="height: 5em"/>
                }
                <span class="text-body-secondary">
                    <small>@(ep.Summary?.TruncateWithSuffix(200, "..."))</small>
                </span>
            </td>
            <td>
                @if (_watchedEps.Contains(ep.Id))
                {
                    <i class="bi bi-eye"></i>
                }
            </td>
            <td class="text-end">
                @(_fileCounts[ep.Id])
            </td>
            <td class="text-nowrap text-end d-none d-md-table-cell">
                @($"{(ep.DurationMinutes is null ? "??" : ep.DurationMinutes.ToString())}m")
            </td>
            <td class="text-nowrap text-end d-none d-md-table-cell">
                @(ep.AirDate?.ToString("yyyy-MM-dd"))
            </td>
        </tr>
        @if (_episodeExpanded.TryGetValue(ep.Id, out var expanded) && expanded)
        {
            <tr>
                <td colspan="5">
                    <div class="d-flex flex-column gap-2">
                        @foreach (var localFile in ep.AniDbFiles.SelectMany(f => f.LocalFiles))
                        {
                            <FileCard LocalFile="@(localFile)" OnChanged="@Load"></FileCard>
                        }
                    </div>
                </td>
            </tr>
        }
    }
    </tbody>
</table>
