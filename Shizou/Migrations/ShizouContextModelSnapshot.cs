// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shizou.Database;

namespace Shizou.Migrations
{
    [DbContext(typeof(ShizouContext))]
    partial class ShizouContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("AniDbEpisodeAniDbFile", b =>
                {
                    b.Property<int>("AniDbEpisodesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AniDbFilesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AniDbEpisodesId", "AniDbFilesId");

                    b.HasIndex("AniDbFilesId");

                    b.ToTable("AniDbEpisodeAniDbFile");
                });

            modelBuilder.Entity("Shizou.Entities.AniDbAnime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("AirDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("AnimeType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("EpisodeCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImagePath")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Restricted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AniDbAnimes");
                });

            modelBuilder.Entity("Shizou.Entities.AniDbEpisode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("AirDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("AniDbAnimeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("EpisodeType")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan?>("Length")
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AniDbAnimeId");

                    b.ToTable("AniDbEpisodes");
                });

            modelBuilder.Entity("Shizou.Entities.AniDbFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AniDbGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AudioCodec")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Censored")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Crc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Deprecated")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FIleName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("FileSize")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FileVersion")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Md5")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sha1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Upadate")
                        .HasColumnType("TEXT");

                    b.Property<string>("VideoCodec")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("WatchedDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("WatchedStatus")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AniDbGroupId");

                    b.ToTable("AniDbFiles");
                });

            modelBuilder.Entity("Shizou.Entities.AniDbGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AniDbGroups");
                });

            modelBuilder.Entity("Shizou.Entities.CommandRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CommandId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CommandParams")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QueueType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CommandId")
                        .IsUnique();

                    b.ToTable("CommandRequests");
                });

            modelBuilder.Entity("Shizou.Entities.ImportFolder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ImportFolders");
                });

            modelBuilder.Entity("AniDbEpisodeAniDbFile", b =>
                {
                    b.HasOne("Shizou.Entities.AniDbEpisode", null)
                        .WithMany()
                        .HasForeignKey("AniDbEpisodesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shizou.Entities.AniDbFile", null)
                        .WithMany()
                        .HasForeignKey("AniDbFilesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shizou.Entities.AniDbEpisode", b =>
                {
                    b.HasOne("Shizou.Entities.AniDbAnime", "AniDbAnime")
                        .WithMany("AniDbEpisodes")
                        .HasForeignKey("AniDbAnimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AniDbAnime");
                });

            modelBuilder.Entity("Shizou.Entities.AniDbFile", b =>
                {
                    b.HasOne("Shizou.Entities.AniDbGroup", "AniDbGroup")
                        .WithMany()
                        .HasForeignKey("AniDbGroupId");

                    b.Navigation("AniDbGroup");
                });

            modelBuilder.Entity("Shizou.Entities.AniDbAnime", b =>
                {
                    b.Navigation("AniDbEpisodes");
                });
#pragma warning restore 612, 618
        }
    }
}
