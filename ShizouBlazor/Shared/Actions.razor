@using Shizou.Dtos
@using Shizou.Services
@using Shizou.Commands
@inject IServiceProvider ServiceProvider

<h3>Actions</h3>
<section class="actions">
    <button type="button" class="btn btn-primary" @onclick="@DispatchNoop">Add noops</button>
    <button type="button" class="btn btn-primary" @onclick="@RunImport">Run Import</button>
    <button type="button" class="btn btn-primary" @onclick="@OpenDialog">Add Import Folder</button>
    @if (DialogOpen)
    {
        <ModalDisplay Model="@ImportFolder" Title="Add Import Folder" OnClose="@OnDialogClose" DialogType="@ModalDisplay.ModalDialogType.Form">
            <div class="form-group">
                <label for="nameInput">Name</label>
                <InputText class="form-control" id="nameInput" @bind-Value="@(ImportFolder.Name)"></InputText>
            </div>
            <div class="form-group">
                <label for="pathInput">Path</label>
                <InputText class="form-control" id="pathInput" @bind-Value="@(ImportFolder.Path)"></InputText>
            </div>
            <div class="form-group">
                <InputCheckbox class="form-check-input" id="scanOnImportInput" @bind-Value="@(ImportFolder.ScanOnImport)"></InputCheckbox>
                <label class="form-check-label" for="scanOnImportInput">Scan on Import</label>
            </div>
        </ModalDisplay>
    }
</section>

@code {

    public ImportFolderDto ImportFolder { get; set; } = new();

    public bool DialogOpen { get; set; }

    private void OnDialogClose(bool accepted)
    {
        DialogOpen = false;
        ImportFolder = new ImportFolderDto();
        StateHasChanged();
    }

    private void OpenDialog()
    {
        DialogOpen = true;
        StateHasChanged();
    }

    private void DispatchNoop()
    {
        ServiceProvider.GetRequiredService<CommandService>().DispatchRange(Enumerable.Range(1, 10).Select(n => new NoopArgs(n)));
    }

    private void RunImport()
    {
        ServiceProvider.GetRequiredService<ImportService>().Import();
    }

}